version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile.dev
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/frontend
      - frontend_node_modules:/frontend/node_modules
    working_dir: /frontend
    command: npm run dev -- --host
    networks:
      - hike-net
    environment:
      - VITE_API_BASE_URL=http://backend:8080/api

  backend:
    build: ./backend
    ports:
      - "80:8080"
    container_name: backend
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:example@mongo:27017/mydatabase?authSource=admin
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - hike-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongo-data:/data/db
    networks:
      - hike-net
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh -u root -p example --quiet
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    networks:
      - hike-net
    depends_on:
      - frontend
      - backend
      - mongo
networks:
  hike-net:
    driver: bridge

volumes:
  frontend_node_modules:
  mongo-data:
